diff -urN scid_vs_pc-4.0/Info.plist scid_vs_pc-4.0-my/Info.plist
--- scid_vs_pc-4.0/Info.plist	2009-06-03 16:54:25.000000000 -0700
+++ scid_vs_pc-4.0-my/Info.plist	2010-07-06 22:51:30.000000000 -0700
@@ -157,7 +157,7 @@
 	<key>CFBundleExecutable</key>
 	<string>scid</string>
 	<key>CFBundleGetInfoString</key>
-	<string>Scid 3.6.25</string>
+	<string>Scid 4.0</string>
 	<key>CFBundleIconFile</key>
 	<string>scid.icns</string>
 	<key>CFBundleIdentifier</key>
diff -urN scid_vs_pc-4.0/tcl/config.tcl scid_vs_pc-4.0-my/tcl/config.tcl
--- scid_vs_pc-4.0/tcl/config.tcl	2010-04-21 00:53:51.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/config.tcl	2010-07-12 22:27:26.000000000 -0700
@@ -5,7 +5,11 @@
 if {$windowsOS} {
   set scidShareDir $scidExeDir
 } else {
-  set scidShareDir [file normalize [file join $scidExeDir "../share/scid"]]
+ if {$macApp} {
+    set scidShareDir [file normalize [file join $scidExeDir "../Resources"]]
+  } else {
+    set scidShareDir [file normalize [file join $scidExeDir "../share/scid"]]
+  }
 }
 
 # also reset BooksDir if the variable is set, but doesn't exist S.A.
diff -urN scid_vs_pc-4.0/tcl/start.tcl scid_vs_pc-4.0-my/tcl/start.tcl
--- scid_vs_pc-4.0/tcl/start.tcl	2010-07-01 02:47:03.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/start.tcl	2010-07-12 22:24:55.000000000 -0700
@@ -46,6 +46,14 @@
 
 set macOS 0
 if {![catch {tk windowingsystem} wsystem] && $wsystem == "aqua"} { set macOS 1 }
+# See if we're inside a Mac .app bundle.  This duplcates part of the command-line
+# parsing, which options should probably be done earlier, but I'm afraid to move
+# things around that much - dr
+set macApp 0
+if { $::macOS && ([string first "-psn" [lindex $argv 0]] == 0)} {
+  # Remember that we were invoked in a MacOS app bundle
+  set macApp 1
+}
 
 # Check that on Unix, the version of tkscid matches the version of this
 # script or on Windows, that the scid.exe and scid.gui versions are identical.
diff -urN scid_vs_pc-4.0/tcl/tools/analysis.tcl scid_vs_pc-4.0-my/tcl/tools/analysis.tcl
--- scid_vs_pc-4.0/tcl/tools/analysis.tcl	2010-07-01 02:42:05.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/tools/analysis.tcl	2010-07-15 20:31:56.000000000 -0700
@@ -269,19 +269,28 @@
           Cmd  $cmd
           Dir  ."
 
-  ### toga
-
-  engine "Name Toga
-          Cmd  fruit
-          Dir  $scidUserDir
-          UCI  1"
-
-  ### phalanx
-  # use "Cmd phalanx -g /tmp/phalanx_logfile" for debugging
-
-  engine "Name Phalanx
-          Cmd  phalanx
-          Dir  $scidUserDir"
+  if {$macApp} {
+    ### toga
+    engine "Name Toga
+            Cmd  fruit
+            Dir  $scidShareDir/engines/togaII1.2.1a
+            UCI  1"
+    ### phalanx
+    # use "Cmd phalanx -g /tmp/phalanx_logfile" for debugging
+    engine "Name Phalanx
+            Cmd  phalanx
+            Dir  $scidShareDir/engines/Phalanx-XXII"
+  } else {
+    ### toga
+    engine "Name Toga
+            Cmd  fruit
+            Dir  $scidUserDir
+            UCI  1"
+    ### phalanx
+    engine "Name Phalanx
+            Cmd  phalanx
+            Dir  $scidUserDir"
+  }
 
 }
 
diff -urN scid_vs_pc-4.0/tcl/tools/tacgame.tcl scid_vs_pc-4.0-my/tcl/tools/tacgame.tcl
--- scid_vs_pc-4.0/tcl/tools/tacgame.tcl	2010-06-18 04:13:00.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/tools/tacgame.tcl	2010-07-15 20:24:51.000000000 -0700
@@ -569,6 +569,11 @@
     set analysisCommand [ ::toAbsPath [ lindex $engineData 1 ] ]
     set analysisArgs [lindex $engineData 2]
     set analysisDir [ ::toAbsPath [lindex $engineData 3] ]
+    # Maybe if they put a full path in the config they knew what they wanted?
+    # Otherwise, look in the analysisDir.  This is to make it work inside a Mac .app - dr
+    if {[file pathtype $analysisCommand] ne "absolute"} {
+      set analysisCommand [file join $analysisDir $analysisCommand]
+    }
 
     # turn phalanx book, ponder and learning off, easy on
     if {$n == 1} {
diff -urN scid_vs_pc-4.0/tcl/tools/uci.tcl scid_vs_pc-4.0-my/tcl/tools/uci.tcl
--- scid_vs_pc-4.0/tcl/tools/uci.tcl	2010-06-26 23:27:53.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/tools/uci.tcl	2010-07-15 20:25:09.000000000 -0700
@@ -655,6 +655,11 @@
     set analysisCommand [ toAbsPath [lindex $engineData 1] ]
     set analysisArgs [lindex $engineData 2]
     set analysisDir [ toAbsPath [lindex $engineData 3] ]
+    # Maybe if they put a full path in the config they knew what they wanted?
+    # Otherwise, look in the analysisDir.  This is to make it work inside a Mac .app - dr
+    if {[file pathtype $analysisCommand] ne "absolute"} {
+      set analysisCommand [file join $analysisDir $analysisCommand]
+    }
 
     # If the analysis directory is not current dir, cd to it:
     set oldpwd ""
diff -urN scid_vs_pc-4.0/tcl/windows.tcl scid_vs_pc-4.0-my/tcl/windows.tcl
--- scid_vs_pc-4.0/tcl/windows.tcl	2010-06-02 05:06:28.000000000 -0700
+++ scid_vs_pc-4.0-my/tcl/windows.tcl	2010-07-14 22:22:08.000000000 -0700
@@ -30,7 +30,7 @@
   # This procedure gets called way too often S.A.
   # It shouldnt really be bound to <Configure> , but only called on exit.
 
-  global winWidth winHeight winX winY
+  global winWidth winHeight winX winY macOS
 
   if {![winfo exists $win]} { return }
   set geom [wm geometry $win]
@@ -41,8 +41,14 @@
   if {$n == 4} {
     if {$win == "."} {
       # trick to handle main window
-      set mainx 0
-      set mainy 0
+      if {$macOS} {
+        # If it goes to 0 0, the whole top bar is under the MacOS menubar and you can't move it
+        set mainx 96
+        set mainy 22
+      } else {
+        set mainx 0
+        set mainy 0
+      }
     }
     set winWidth($win) $width
     set winHeight($win) $height
@@ -54,7 +60,7 @@
 }
 
 proc setWinLocation {win} {
-  global winX winY
+  global winX winY macOS
 
   if {[info exists winX($win)]  &&  [info exists winY($win)] } {
 
@@ -63,8 +69,14 @@
 
     if {$win == "."} {
       # trick to handle main window
-      set mainx 0
-      set mainy 0
+      if {$macOS} {
+        # If it goes to 0 0, the whole top bar is under the MacOS menubar and you can't move it
+        set mainx 96
+        set mainy 22
+      } else {
+        set mainx 0
+        set mainy 0
+      }
     }
 
     set x [expr $mainx + $winX($win)]
