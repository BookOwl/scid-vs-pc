Currently the bug bear of this feature is syncing the move forwards with reading analysis input.
This patch takes the correct approach, moving ::pause into uci.tcl and connecting it to isready,
(deprecating annotate(LastMove), which is a clumsy thing, and source of current hangs).
This makes it too fast for our current sendPosToEngineUCI implementation.
as it is currently just an "after idle" thing. Notable symptom is:
analysis(side) can be wrong, causing scores to be the wrong sign (+/-).

Index: tcl/move.tcl
===================================================================
--- tcl/move.tcl	(revision 2066)
+++ tcl/move.tcl	(working copy)
@@ -137,15 +137,6 @@
           # Pausing a second gives the gui a chance to catch to the engine,
           # which can reply super-fast on depth-based annotation
           set ::last_annoMove {}
-          after 1000 {
-            set ::pause 0
-            if {$::last_annoMove != ""} {
-	      after cancel autoplay
-              set ::annoMove $::last_annoMove ; # needed ?
-	      set ::annotate(LastMove) $::last_annoMove
-	      autoplay
-            }
-          }
         }
       }
     }
Index: tcl/tools/uci.tcl
===================================================================
--- tcl/tools/uci.tcl	(revision 2066)
+++ tcl/tools/uci.tcl	(working copy)
@@ -170,11 +170,7 @@
 	    if {($uciInfo(depth$n) >= $annotate(WantedDepth) || $uciInfo(scoremate$n) > 0) || \
                 [sc_pos matchMoves {}] == {} || (!$::wentOutOfBook && $::useAnalysisBook)} {
 	      if {[lindex $uciInfo(pv$n) 0] != $annotate(LastMove)} {
-                if {$::pause} {
-                   if {[lindex $uciInfo(pv$n) 0] != ""} {
-		     set ::last_annoMove [lindex $uciInfo(pv$n) 0]
-                   }
-                } else {
+                if {!$::pause} {
 		  set annoMove [lindex $uciInfo(pv$n) 0]
                 }
               }
@@ -325,6 +321,7 @@
       if {$annoMove != ""} {
 	after cancel autoplay ; # needed ???
 	set annotate(LastMove) $annoMove
+puts "LASTMOVE $annoMove"
 	autoplay
       }
 
Index: tcl/tools/analysis.tcl
===================================================================
--- tcl/tools/analysis.tcl	(revision 2066)
+++ tcl/tools/analysis.tcl	(working copy)
@@ -1255,15 +1255,6 @@
     # Pausing a second gives the gui a chance to catch to the engine,
     # which can reply super-fast on depth-based annotation
     set ::last_annoMove {}
-    after 1000 {
-      set ::pause 0
-      if {$::last_annoMove != ""} {
-	after cancel autoplay
-	set ::annoMove $::last_annoMove ; # needed ?
-	set ::annotate(LastMove) $::last_annoMove
-       autoplay
-      }
-    }
 
     updateBoard -pgn
     ### Animation ??
@@ -3504,6 +3495,9 @@
     global analysis ::uci::uciInfo
 
     set analysis(after$n) ""
+    if {$analysis(after$n) != ""} {
+	after cancel $analysis(after$n)
+    }
 
     if {$analysis(waitForReadyOk$n) } {
         # If too slow something is wrong: give up
@@ -3541,6 +3535,11 @@
 	#  As the engine's reaction to "ucinewgame" can take some time the GUI should always send "isready"
 	#  after "ucinewgame" to wait for the engine to finish its operation.
 
+if {$n == $::annotate(Engine) && $::pause} {
+set ::pause 0
+set ::annotate(LastMove) {} ;# ????
+}
+
     }
 }
 
