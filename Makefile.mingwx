### Windows Makefile for the scid chess database package using
### linux-hosted MinGW cross compiler
### Change MINGW_DIR, MINGW_TARGET and TCL_DIR to meet your setup
### Copyright (C) 2009, O. Sezer (sezero@users.sourceforge.net)


MINGW_DIR:=/usr/local/cross-tools
#MINGW_TARGET=i686-pc-mingw32
MINGW_TARGET=i386-mingw32msvc
MINGW_BIN:=$(MINGW_DIR)/bin
TCL_DIR:=/usr/local/cross-tcl
# Tcl/Tk version: it should be "85" for Tcl/Tk 8.5, etc.
TCL_VERSION:=85


### Compiler and linker:
# I assume the $(MINGW_BIN) directory is on the $PATH
# If not, prefix the following ones with $(MINGW_BIN)/
COMPILE:=$(MINGW_TARGET)-g++
CC:=$(MINGW_TARGET)-gcc
LINK:=$(MINGW_TARGET)-g++
RC:=$(MINGW_TARGET)-windres

### tcl paths:
TCL_INCLUDE:=$(TCL_DIR)/include
TCL_LIB:=$(TCL_DIR)/lib


########################################
### Compiler options:


### TB: Tablebase support.
###    Use:   TB = /DSCID_USE_TB     for tablebase capability.
###    Use:   TB =                   for no tablebase reading capability.
TB = -DSCID_USE_TB -DT41_INCLUDE

### OPT: C/C++ Optimization
OPT = -O3

### CPPOPT: Optimization for C++ only (not C)
CPPOPT = -fno-rtti -fno-exceptions

### WARNINGS: Compiler warnings
WARNINGS = -Wall

### PROFILE: Use "-pg" for profiling in g++
#PROFILE = -fprofile-arcs -ftest-coverage
PROFILE=

# LFLAGS: Linker flags
LFLAGS = $(PROFILE)

### CPPFLAGS: C++ compiler flags
CPPFLAGS = -DZLIB -DWIN32 $(OPT) $(CPPOPT) $(PROFILE) $(WARNINGS)

### CPPFLAGSNOWARN: C++ compiler flags without warnings
CPPFLAGSNOWARN = -DZLIB -DWIN32 $(OPT) $(CPPOPT) $(PROFILE)

### CFLAGS: C (not C++) compiler flags
CFLAGS = -DZLIB -DWIN32 $(OPT) $(PROFILE)


### EXECS: all the evecutable programs compiled from C++ files.
EXECS= pgnscid.exe scidt.exe scid.exe tcscid.exe scmerge.exe eco2epd.exe scidlet.exe

### SCIDOBJS: not all the .o files that make up scid, just the standard
###   files that most of the scid programs use.
###
SCIDOBJS= src/misc.o src/index.o src/date.o src/namebase.o \
      src/position.o src/game.o src/gfile.o src/matsig.o \
      src/bytebuf.o src/textbuf.o src/myassert.o src/stralloc.o \
      src/mfile.o src/dstring.o src/pgnparse.o src/stored.o \
      src/movelist.o \
      src/polyglot/attack.o src/polyglot/board.o src/polyglot/book.o \
			src/polyglot/book_make.o src/polyglot/book_merge.o src/polyglot/colour.o \
      src/polyglot/fen.o src/polyglot/game.o src/polyglot/hash.o \
      src/polyglot/io.o src/polyglot/line.o src/polyglot/list.o src/polyglot/main.o src/polyglot/move.o \
      src/polyglot/move_do.o src/polyglot/move_gen.o src/polyglot/move_legal.o src/polyglot/option.o \
      src/polyglot/parse.o src/polyglot/pgn.o src/polyglot/piece.o src/polyglot/random.o \
      src/polyglot/san.o src/polyglot/search.o src/polyglot/square.o src/polyglot/util.o


### ZLIBOBJS: object files in the zlib compression library.
###
ZLIBOBJS= src/zlib/adler32.o src/zlib/compress.o src/zlib/crc32.o \
      src/zlib/gzio.o src/zlib/uncompr.o src/zlib/deflate.o \
      src/zlib/trees.o src/zlib/zutil.o src/zlib/inflate.o \
      src/zlib/infblock.o src/zlib/inftrees.o src/zlib/infcodes.o \
      src/zlib/infutil.o src/zlib/inffast.o

### OBJS: all standard object files for scid.
###
OBJS= $(SCIDOBJS) $(ZLIBOBJS)

### LANGUAGES: all the extra language files for scid.
LANGUAGES = tcl/lang/deutsch.tcl tcl/lang/francais.tcl tcl/lang/italian.tcl tcl/lang/russian.tcl \
      tcl/lang/nederlan.tcl tcl/lang/spanish.tcl tcl/lang/portbr.tcl tcl/lang/swedish.tcl \
      tcl/lang/norsk.tcl tcl/lang/polish.tcl tcl/lang/czech.tcl tcl/lang/hungary.tcl tcl/lang/serbian.tcl

### TCLS: all the .tcl files that make up "scid".
TCLS= \
  tcl/start.tcl \
  tcl/config.tcl \
  tcl/bitmaps.tcl \
  tcl/language.tcl \
  tcl/utils.tcl \
    tcl/utils/date.tcl tcl/utils/font.tcl tcl/utils/graph.tcl tcl/utils/history.tcl \
    tcl/utils/pane.tcl tcl/utils/sound.tcl tcl/utils/string.tcl tcl/utils/tooltip.tcl \
    tcl/utils/validate.tcl tcl/utils/win.tcl \
  tcl/misc/misc.tcl tcl/htext.tcl \
  tcl/contrib/combobox.tcl \
  tcl/file.tcl \
    tcl/file/finder.tcl tcl/file/bookmark.tcl tcl/file/recent.tcl tcl/file/epd.tcl \
    tcl/file/spellchk.tcl tcl/file/maint.tcl \
  tcl/edit.tcl \
  tcl/game.tcl \
    tcl/game/browser.tcl \
  tcl/windows.tcl \
    tcl/windows/gamelist.tcl tcl/windows/pgn.tcl tcl/windows/book.tcl \
    tcl/windows/comment.tcl tcl/windows/eco.tcl \
    tcl/windows/stats.tcl tcl/windows/tree.tcl tcl/windows/crosstab.tcl \
    tcl/windows/pfinder.tcl tcl/windows/tourney.tcl tcl/windows/switcher.tcl \
  tcl/search/search.tcl \
    tcl/search/board.tcl tcl/search/header.tcl tcl/search/material.tcl \
  tcl/contrib/ezsmtp/ezsmtp.tcl \
    tcl/tools/email.tcl \
    tcl/tools/import.tcl \
    tcl/tools/optable.tcl tcl/tools/preport.tcl tcl/tools/pinfo.tcl \
    tcl/tools/analysis.tcl tcl/tools/wbdetect.tcl \
    tcl/tools/reper.tcl tcl/tools/graphs.tcl tcl/tools/tablebase.tcl tcl/tools/ptracker.tcl \
  tcl/help/help.tcl tcl/help/tips.tcl \
  tcl/menus.tcl tcl/board.tcl tcl/move.tcl tcl/main.tcl \
    tcl/lang/english.tcl $(LANGUAGES) \
  tcl/end.tcl tcl/tools/tacgame.tcl tcl/tools/sergame.tcl tcl/tools/fics.tcl tcl/tools/calvar.tcl tcl/tools/opening.tcl tcl/tools/tactics.tcl tcl/tools/uci.tcl tcl/tools/novag.tcl tcl/misc/flags.tcl tcl/tools/correspondence.tcl tcl/tools/inputengine.tcl


########################################

### Type "make" or "make all" to make all executables:
all: $(EXECS) scid.gui

scid.gui: $(TCLS)
	rm -f ./scid.gui
	echo $(TCLS) > ./scid.gui

# escid.gui: scid GUI with English only, no extra language support.
escid.gui: $(TCLS)
	rm -f ./escid.gui
	echo $(TCLS_ENGLISH_ONLY) > ./escid.gui

scmerge.exe: src/scmerge.o $(OBJS)
	$(LINK) -o scmerge.exe src/scmerge.o $(OBJS)

pgnscid.exe: src/pgnscid.o $(OBJS)
	$(LINK) -o pgnscid.exe src/pgnscid.o $(OBJS)

scidt.exe: src/scidt.o $(OBJS)
	$(LINK) -o scidt.exe src/scidt.o $(OBJS)

scidlet.exe: src/scidlet.o src/engine.o src/recog.o $(OBJS)
	$(LINK) $(LFLAGS) -o scidlet.exe src/scidlet.o src/engine.o src/recog.o \
          src/misc.o src/position.o src/movelist.o src/dstring.o

scid.exe: src/scid.o $(OBJS) src/tree.o src/filter.o \
            src/pbook.o src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o scid.coff
	$(LINK) -o scid.exe src/scid.o $(OBJS) \
            src/tree.o src/filter.o src/pbook.o \
            src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o scid.coff \
            -L$(TCL_LIB) -ltk$(TCL_VERSION) -ltcl$(TCL_VERSION) -mwindows

tkscid.exe: src/tkscid.o $(OBJS) src/tree.o src/filter.o \
            src/pbook.o src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o
	$(LINK) $(LFLAGS)  -o tkscid.exe src/tkscid.o $(OBJS) \
            src/tree.o src/filter.o src/pbook.o \
            src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o \
            -L$(TCL_LIB) -ltk$(TCL_VERSION) -ltcl$(TCL_VERSION)

tcscid.exe: src/tcscid.o $(OBJS) src/tree.o src/filter.o \
            src/pbook.o src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o
	$(LINK) $(LFLAGS) -o tcscid.exe src/tcscid.o $(OBJS) \
            src/tree.o src/filter.o src/pbook.o \
            src/crosstab.o src/spellchk.o src/probe.o \
            src/optable.o src/engine.o src/recog.o \
            -L$(TCL_LIB) -ltcl$(TCL_VERSION)

eco2epd.exe: src/eco2epd.o src/pbook.o $(OBJS)
	$(LINK) -o eco2epd.exe src/eco2epd.o src/pbook.o $(OBJS)

scid.coff: scid.rc
	$(RC) -O coff scid.rc scid.coff

### To remove object and executable files: type "make clean"
clean:
	rm -f src/*.o src/zlib/*.o src/polyglot/*.o $(EXECS) scid.gui scid.coff


src/tcscid.o: src/tkscid.cpp
	$(COMPILE) $(CPPFLAGS) -I$(TCL_INCLUDE) -DTCL_ONLY -c src/tkscid.cpp \
	  -o ./src/tcscid.o

src/tkscid.o: src/tkscid.cpp
	$(COMPILE) $(CPPFLAGS) -I$(TCL_INCLUDE) -c src/tkscid.cpp \
	  -o ./src/tkscid.o

src/scid.o: src/tkscid.cpp
	$(COMPILE) $(CPPFLAGS) -I$(TCL_INCLUDE) -DSOURCE_TCL_FILE="\"scid.gui\"" \
	  -c src/tkscid.cpp -o ./src/scid.o

src/probe.o: src/probe.cpp src/egtb/tbindex.cpp src/egtb/tbdecode.c
	$(COMPILE) $(CPPFLAGSNOWARN) $(TB) -c src/probe.cpp -o ./src/probe.o

%.o: %.cpp
	$(COMPILE) $(CPPFLAGS) -I$(TCL_INCLUDE) -c $< -o ./$@

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o ./$@

